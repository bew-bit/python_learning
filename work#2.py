#1. Создать список и заполнить его элементами
#различных типов данных. Реализовать скрипт проверки
#типа данных каждого элемента. Использовать функцию
#type() для проверки типа.
list = ['лето', 5, 5.5, None, True, [5, 5.5]]
for i, score in enumerate(list):
    print(f"'элемент: {score}, тип {type(score)}")
#2. Для списка реализовать обмен значений соседних
#элементов, т.е. Значениями обмениваются элементы
#с индексами 0 и 1, 2 и 3 и т.д. При нечетном
#количестве элементов последний сохранить на своем
#месте. Для заполнения списка элементов необходимо
#использовать функцию input().
list = ["a", "1", "b", "2", "c", "3", "d"]
j = 0
for i in range(int(len(list) / 2)):
    list[j], list[j + 1] = list[j + 1], list[j]
    j += 2
print(list)
#3. Пользователь вводит месяц в виде целого числа
#от 1 до 12. Сообщить к какому времени года
#относится месяц (зима, весна, лето, осень).
#Напишите решения через list и через dict.
month = int(input('3. Введите порядковый номер месяца в году: '))
year = {'зима': (1, 2, 12), 'весна': (3, 4, 5),
        'лето': (6, 7, 8), 'осень': (9, 10, 11)}
for key in year.keys():
    if month in year[key]:
        print(key)
#4. Пользователь вводит строку из нескольких слов,
#разделённых пробелами. Вывести каждое слово с
#новой строки. Строки необходимо пронумеровать.
#Если в слово длинное, выводить только первые
#10 букв в слове.
sntnc = input('4. Введите несколько слов: ')
wrds = sntnc.split()
for i, wrds in enumerate(wrds):
   print(i+1, wrds[:10])
#5. Реализовать структуру «Рейтинг», представляющую собой
#не возрастающий набор натуральных чисел. У пользователя
#необходимо запрашивать новый элемент рейтинга. Если
#в рейтинге существуют элементы с одинаковыми значениями,
#то новый элемент с тем же значением должен разместиться
#после них.
qty = int(input("5. Введите кол-во баллов в Рейтинге: "))
score = []
for i in range(0, qty):
    el = int(input(str(i + 1) + "-й балл: "))
    score.append(el)
print(f"Вы ввели: {score}")
def sort(list):
    for i in range(1, len(list)):
        k = list[i]
        j = i
        while (j - 1 >= 0) and (list[j - 1] < k):
            list[j]=list[j-1]
            j = j - 1
        list[j] = k
sort(score)
print(f"Рейтинг: {score}")
#6. Реализовать структуру данных «Товары». Она должна
#представлять собой список кортежей. Каждый кортеж
#хранит информацию об отдельном товаре. В кортеже
#должно быть два элемента — номер товара и словарь с
#параметрами (характеристиками товара: название, цена,
#количество, единица измерения). Структуру нужно
#сформировать программно, т.е. запрашивать все данные у пользователя.
#Необходимо собрать аналитику о товарах. Реализовать
#словарь, в котором каждый ключ — характеристика
#товара, например название, а значение — список
#значений-характеристик, например список названий товаров.
qty = int(input("6. Введите кол-во товаров: "))
goods = []
names = []
prices = []
quantities = []
units = []
for i in range(0, qty):
    a = input('Введите название товара #' + str(i + 1) + ': ')
    b = float(input('Введите цену товара #' + str(i + 1) + ': '))
    c = int(input('Введите количество товара #' + str(i + 1) + ': '))
    d = input('Введите единицы измерения товара #' + str(i + 1) + ': ')
    sku = dict(название=a, цена=b, количество=c, ед=d)
    tovary = (i + 1, sku)
    goods.append(tovary)
    names.append(a)
    prices.append(b)
    quantities.append(c)
    units.append(d)
print(f"Перечень товаров: {goods}")
an = dict(название=names, цена=prices, количество=quantities, ед=units)
print('Аналитика по товарам: ', an)
